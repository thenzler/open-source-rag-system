name: Security Scans

on:
  schedule:
    - cron: '0 6 * * *'  # Daily security scans at 6 AM UTC
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'requirements.txt'
      - 'core/**'
      - 'Dockerfile'

# Organization-friendly permissions
permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: read

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: read
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  secret-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check if we can scan diff or need filesystem scan
      id: scan-mode
      run: |
        if [ "${{ github.event_name }}" = "push" ] && [ "$(git rev-list --count HEAD^..HEAD)" -gt 0 ]; then
          echo "mode=diff" >> $GITHUB_OUTPUT
          echo "base=HEAD^" >> $GITHUB_OUTPUT
          echo "head=HEAD" >> $GITHUB_OUTPUT
        else
          echo "mode=filesystem" >> $GITHUB_OUTPUT
        fi
    
    - name: Run TruffleHog OSS (Diff Mode)
      if: steps.scan-mode.outputs.mode == 'diff'
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ steps.scan-mode.outputs.base }}
        head: ${{ steps.scan-mode.outputs.head }}
        extra_args: --debug --only-verified
    
    - name: Run TruffleHog OSS (Filesystem Mode)
      if: steps.scan-mode.outputs.mode == 'filesystem'
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        extra_args: --debug --only-verified

  # Container security disabled - no Dockerfile exists
  # container-security:
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'pull_request'

  snyk-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    if: github.event_name != 'pull_request' && vars.SNYK_TOKEN != ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=deployment/requirements/simple_requirements.txt
      continue-on-error: true
    
    - name: Upload Snyk results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('snyk.sarif') != ''
      with:
        sarif_file: snyk.sarif

  # OSV scanner disabled - causes too many false positives
  # osv-scanner:
  #   uses: "google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.0.3"
  #   permissions:
  #     actions: read
  #     security-events: write
  #     contents: read

  security-summary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    needs: [codeql, secret-scan, snyk-security]
    if: always()
    
    steps:
    - name: Security Summary
      run: |
        echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| CodeQL | ${{ needs.codeql.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Secret Scan | ${{ needs.secret-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        # echo "| Container Security | ${{ needs.container-security.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Snyk Security | ${{ needs.snyk-security.result }} |" >> $GITHUB_STEP_SUMMARY
        # echo "| OSV Scanner | ${{ needs.osv-scanner.result }} |" >> $GITHUB_STEP_SUMMARY